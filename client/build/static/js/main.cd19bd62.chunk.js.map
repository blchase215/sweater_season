{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/GlobalState.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","utils/auth.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","pages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_SWEATERS","ADD_TO_CART","REMOVE_FROM_CART","TOGGLE_CART","UPDATE_TAGS","UPDATE_CURRENT_TAG","reducer","state","action","type","sweaters","cartOpen","cart","sweater","newState","filter","_id","length","tags","currentTag","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","image","name","creator","price","description","Card","style","margin","width","to","Img","variant","src","height","objectFit","Body","Title","Text","Button","onClick","find","cartItem","purchaseQuantity","QUERY_SWEATERS","gql","QUERY_CHECKOUT","QUERY_ALL_SWEATERS","QUERY_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","SweaterList","useLocation","useQuery","loading","data","useEffect","forEach","then","className","pathname","Auth","getProfile","email","map","username","spinner","alt","TagMenu","CartItem","item","CloseButton","removeFromCart","dotenv","config","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","error","toggleCart","res","redirectToCheckout","sessionId","checkout","session","sum","toFixed","calculateTotal","loggedIn","sweaterIds","i","push","variables","Home","Detail","id","useParams","useState","currentSweater","setCurrentSweater","indexedSweaters","disabled","p","Jumbotron","children","clear","paddingTop","textAlign","NoMatch","role","LOGIN","ADD_ORDER","ADD_USER","Login","password","formState","setFormState","useMutation","login","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","target","Form","onSubmit","Group","Label","Control","placeholder","onChange","Signup","addUser","htmlFor","controlId","Check","label","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","firstName","lastName","orders","order","parseInt","purchaseDate","toLocaleDateString","index","Upload","fileInputState","setFileInputState","previewSource","setPreviewSource","selectedFile","setSelectedFile","setSuccessMsg","setErrMsg","previewFile","file","reader","FileReader","readAsDataURL","onloadend","uploadImage","base64EncodedImage","fetch","body","JSON","stringify","headers","files","reload","httpLink","createHttpLink","uri","authLink","setContext","_","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cd19bd62.chunk.js","sourcesContent":["export const UPDATE_SWEATERS = \"UPDATE_SWEATERS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_TAGS = \"UPDATE_TAGS\";\nexport const UPDATE_CURRENT_TAG = \"UPDATE_CURRENT_TAG\";\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_SWEATERS,\n  ADD_TO_CART,\n  REMOVE_FROM_CART,\n  UPDATE_TAGS,\n  UPDATE_CURRENT_TAG,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_SWEATERS:\n      return {\n        ...state,\n        sweaters: [...action.sweaters],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.sweater],\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(sweater => {\n        return sweater._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_TAGS:\n      return {\n        ...state,\n        tags: [...action.tags],\n      };\n\n    case UPDATE_CURRENT_TAG:\n      return {\n        ...state,\n        currentTag: action.currentTag\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    sweaters: [],\n    cart: [],\n    cartOpen: false,\n    tags: [],\n    currentTag: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('sweater-season', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('sweaters', { keyPath: '_id' });\n      db.createObjectStore('tags', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import { pluralize } from \"../../utils/helpers\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction ProductItem(props) {\n  console.log(props);\n  const [state, dispatch] = useStoreContext();\n\n  const { image, name, _id, creator, price, description } = props;\n\n  const { cart } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n    if (itemInCart) {\n      // dispatch({\n      //   type: UPDATE_CART_QUANTITY,\n      //   _id: _id,\n      //   purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      // });\n      // idbPromise('cart', 'put', {\n      //   ...itemInCart,\n      //   purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      // });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        sweater: { ...props, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...props, purchaseQuantity: 1 });\n    }\n  };\n\n  return (\n    <Card style={{ margin: 5, width: \"18rem\" }}>\n      <Link to={`/sweaters/${_id}`}>\n        <Card.Img variant=\"top\" src={`/images/${image}`} style={{height: \"24rem\", objectFit: \"cover\"}}/>\n      </Link>\n      <Card.Body>\n        <Card.Title>{name} </Card.Title>\n        <Card.Text>\n              {description}\n            <span><br></br>${price}<br></br>Creator: {creator}</span>\n        </Card.Text>\n        <Button variant=\"primary\" onClick={addToCart}>\n          Add to cart\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default ProductItem;","import { gql } from '@apollo/client';\n\nexport const QUERY_SWEATERS = gql`\n  query getSweaters($tag: ID) {\n    sweaters(tag: $tag) {\n      _id\n      name\n      creator\n      description\n      price\n      image\n      sold\n      tag {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($sweaters: [ID]!) {\n    checkout(sweaters: $sweaters) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_SWEATERS = gql`\nquery GetAllSweaters{\n    sweaters {\n      _id\n      name\n      description\n      image\n      price\n      creator {\n        username\n        email\n      }\n    }\n  }\n`;\n\nexport const QUERY_TAGS = gql`\n  {\n    tag {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      username\n      orders {\n        _id\n        purchaseDate\n        sweaters {\n          _id\n          name\n          creator\n          description\n          price\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_SWEATERS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_ALL_SWEATERS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\nimport { useLocation } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\nfunction SweaterList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentTag } = state;\n\n  const location = useLocation();\n  console.log(location);\n  \n  const { loading, data } = useQuery(QUERY_ALL_SWEATERS);\n  \n  useEffect(() => {\n    if (data) {\n      console.log(\"here\", data);\n      dispatch({\n        type: UPDATE_SWEATERS,\n        sweaters: data.sweaters,\n      });\n      data.sweaters.forEach((sweater) => {\n        idbPromise('sweaters', 'put', sweater);\n      });\n    } else if (!loading) {\n      idbPromise('sweaters', 'get').then((sweaters) => {\n        dispatch({\n          type: UPDATE_SWEATERS,\n          sweaters: sweaters,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterSweaters() {\n    if (location.pathname !== '/profile') {\n      return state.sweaters;\n    }\n\n    console.log(Auth.getProfile().data.email)\n\n    return state.sweaters.filter(\n      (sweater) => sweater.creator.email === Auth.getProfile().data.email\n    );\n    // if (!currentTag) {\n    //   return state.sweaters;\n    // }\n\n    // return state.sweaters.filter(\n    //   (sweater) => sweater.tag._id === currentTag\n    // );\n  }\n\n  return (\n    <div className=\"my-2\">\n      {state.sweaters.length ? (\n        <div className=\"flex-row\">\n          {filterSweaters().map((sweater) => (\n            <ProductItem\n              key={sweater._id}\n              _id={sweater._id}\n              image={sweater.image}\n              name={sweater.name}\n              price={sweater.price}\n              description={sweater.description}\n              creator={sweater.creator.username}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any sweaters yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default SweaterList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_TAGS,\n  UPDATE_CURRENT_TAG,\n} from '../../utils/actions';\nimport { QUERY_TAGS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction TagMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { tags } = state;\n\n  const { loading, data: tagData } = useQuery(QUERY_TAGS);\n\n  useEffect(() => {\n    if (tagData) {\n      dispatch({\n        type: UPDATE_TAGS,\n        tags: tagData.tags,\n      });\n      tagData.tags.forEach((tag) => {\n        idbPromise('tags', 'put', tag);\n      });\n    } else if (!loading) {\n      idbPromise('tags', 'get').then((tags) => {\n        dispatch({\n          type: UPDATE_TAGS,\n          tags: tags,\n        });\n      });\n    }\n  }, [tagData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_TAG,\n      currentTag: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Tag:</h2>\n      {tags.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default TagMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport CloseButton from 'react-bootstrap/CloseButton';\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <CloseButton onClick={() => removeFromCart(item)} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART } from '../../utils/actions';\nimport './style.css';\nimport dotenv from 'dotenv';\nimport CloseButton from 'react-bootstrap/CloseButton';\ndotenv.config();\n\n// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\nconst stripePromise = loadStripe('pk_test_51LnkLHLNSMmSC34MhAnU5jjgtfttWaKzyAhHtegkzRFaPzFpuhzMdtitjOTzYZFD5hPvqZsnkX4CISnADbFRuNPs00E4DATg8q');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data, error}] = useLazyQuery(QUERY_CHECKOUT);\n\n  // We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\n  // Then we should redirect to the checkout with a reference to our session id\n  useEffect(() => {\n    console.log(data);\n    console.log(\"HELLO\", error);\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  // // If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\n  // // If so, invoke the getCart method and populate the cart with the existing from the session\n  // useEffect(() => {\n  //   async function getCart() {\n  //     const cart = await idbPromise('cart', 'get');\n  //     dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n  //   }\n\n  //   if (!state.cart.length) {\n  //     getCart();\n  //   }\n  // }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  // When the submit checkout method is invoked, loop through each item in the cart\n  // Add each item id to the productIds array and then invoke the getCheckout query passing an object containing the id for all our products\n  function submitCheckout() {\n    const sweaterIds = [];\n      console.log(\"1\");\n    state.cart.forEach((item) => {\n      console.log(item);\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        sweaterIds.push(item._id);\n      }\n    });\n    console.log(\"2\");\n    console.log(sweaterIds);\n    getCheckout({\n      variables: { sweaters: sweaterIds },\n    });\n    console.log(\"3\");\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <img style={{ width: 35, height: 30 }} src=\"https://user-images.githubusercontent.com/108953743/193062101-f7d7ab85-d08b-40c0-b809-bdb50339a14e.png\" aria-label=\"trash\"></img>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      < CloseButton className=\"close\" onClick={toggleCart}/>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {/* Check to see if the user is logged in. If so render a button to check out */}\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport SweaterList from \"../components/ProductList\";\nimport TagMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      {/* <TagMenu /> */}\n      <SweaterList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  ADD_TO_CART,\n  UPDATE_SWEATERS,\n} from '../utils/actions';\nimport { QUERY_SWEATERS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nimport Button from 'react-bootstrap/Button';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentSweater, setCurrentSweater] = useState({});\n\n  const { loading, data } = useQuery(QUERY_SWEATERS);\n\n  const { sweaters, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (sweaters.length) {\n      setCurrentSweater(sweaters.find((sweater) => sweater._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_SWEATERS,\n        sweaters: data.sweaters,\n      });\n\n      data.sweaters.forEach((sweater) => {\n        idbPromise('sweaters', 'put', sweater);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('sweaters', 'get').then((indexedSweaters) => {\n        dispatch({\n          type: UPDATE_SWEATERS,\n          sweaters: indexedSweaters,\n        });\n      });\n    }\n  }, [sweaters, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n    //   dispatch({\n    //     type: UPDATE_CART_QUANTITY,\n    //     _id: id,\n    //     purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n    //   });\n    //   idbPromise('cart', 'put', {\n    //     ...itemInCart,\n    //     purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n    //   });\n    } \n    // else {\n      dispatch({\n        type: ADD_TO_CART,\n        sweater: { ...currentSweater, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentSweater, purchaseQuantity: 1 });\n    // }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentSweater._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentSweater });\n  };\n\n  return (\n    <>\n      {currentSweater && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Sweaters</Link>\n\n          <h2>{currentSweater.name}</h2>\n\n          <p>{currentSweater.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentSweater.price}{' '}\n            <Button variant=\"success\" onClick={addToCart}>Add to Cart</Button>\n            <Button\n              variant=\"danger\"\n              disabled={!cart.find((p) => p._id === currentSweater._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </Button>\n          </p>\n\n          <img\n            src={`/images/${currentSweater.image}`}\n            alt={currentSweater.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($sweaters: [ID]!) {\n    addOrder(sweaters: $sweaters) {\n      purchaseDate\n      sweaters {\n        _id\n        name\n        creator\n        description\n        image\n        price\n        tag {\n          name\n          }\n        sold\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $username: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      username: $username\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n      <h2>Login</h2>\n      <Form onSubmit={handleFormSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n        {error ? (\n          <div>\n            <p className=\"error-text\">Email or password are incorrect</p>\n          </div>\n        ) : null}\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\", username: \"\" });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        username: formState.username\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n      <Form onSubmit={handleFormSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Bob12345\"\n            id=\"username\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"bob12345@gmaill.com\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"pwd\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"*******\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"Make me a Seller\" />\n        </Form.Group>\n        <Button onSubmit={handleFormSubmit} variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderhistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/profile\">\n              Profile\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <div className=\"sign-up\">\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1 className=\"title-text\">\n        <Link to=\"/\">\n          <img style={{ width: 60, height: 60 }} src=\"https://user-images.githubusercontent.com/108953743/192822089-c7dec81a-cf0d-4bb0-8b26-df726df2f8a6.png\" aria-label=\"shopping bag\"></img>\n          Sweater Season\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const sweaters = cart.map((item) => item._id);\n\n      if (sweaters.length) {\n        const { data } = await addOrder({ variables: { sweaters } });\n        const sweaterData = data.addOrder.sweaters;\n\n        sweaterData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Sweaters</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.sweaters.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/sweaters/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React, { useState } from 'react';\nimport SweaterList from \"../components/ProductList\";\n\nimport Button from \"react-bootstrap/Button\";\n\nexport default function Upload() {\n    const [fileInputState, setFileInputState] = useState('');\n    const [previewSource, setPreviewSource] = useState('');\n    const [selectedFile, setSelectedFile] = useState();\n    const [successMsg, setSuccessMsg] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n\n    const handleFileInputChange = (e) => {\n        const file = e.target.files[0];\n        previewFile(file);\n        setSelectedFile(file);\n        setFileInputState(e.target.value);\n    };\n\n    const previewFile = (file) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            setPreviewSource(reader.result);\n        };\n    };\n\n    const handleSubmitFile = (e) => {\n        console.log('hi');\n        e.preventDefault();\n        if (!selectedFile) return;\n        const reader = new FileReader();\n        reader.readAsDataURL(selectedFile);\n        reader.onloadend = () => {\n            uploadImage(reader.result);\n        };\n        reader.onerror = () => {\n            console.error('AHHHHHHHH!!');\n            setErrMsg('something went wrong!');\n        };\n    };\n\n    const uploadImage = async (base64EncodedImage) => {\n        try {\n            await fetch('/api/upload', {\n                method: 'POST',\n                body: JSON.stringify({ data: base64EncodedImage }),\n                headers: { 'Content-Type': 'application/json' },\n            });\n            setFileInputState('');\n            setPreviewSource('');\n            setSuccessMsg('Image uploaded successfully');\n        } catch (err) {\n            console.error(err);\n            setErrMsg('Something went wrong!');\n        }\n    };\n\n    const refreshPage = () => {\n        window.location.reload();\n    } \n\n    return (\n        <div className='profile'>\n            <h1 className=\"title\">Upload a Sweater!</h1>\n            <form onSubmit={handleSubmitFile} className=\"form\">\n                <input\n                    id=\"fileInput\"\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={handleFileInputChange}\n                    value={fileInputState}\n                    className=\"form-input\"\n                />\n                <Button onClick={refreshPage}>\n                    Submit\n                </Button>\n            </form>\n            <div className='inputData'>\n                <ul>\n                        <span>Title: </span>\n                    <li>\n                        <input\n                        id=\"fileInput\"\n                        type=\"text\"\n                        name=\"title\"\n                        className=\"form-input\"\n                        />\n                    </li>\n                        <span>Description: </span>\n                    <li>\n                        <textarea\n                        id=\"fileInput\"\n                        type=\"text\"\n                        name=\"title\"\n                        className=\"form-input\"\n                        />\n                    </li>\n                        <span>Price: </span>\n                    <li>\n                        <input\n                        id=\"fileInput\"\n                        type=\"text\"\n                        name=\"title\"\n                        className=\"form-input\"\n                        />\n                    </li>\n                </ul>\n                {previewSource && (\n                <img className='renderImg'\n                    src={previewSource}\n                    alt=\"chosen\"\n                    style={{ height: '300px' }}\n                />\n            )}\n            </div>\n            <h1>My Sweaters: </h1>\n            <SweaterList />\n        </div>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport Profile from './pages/Profile';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/profile\" \n                element={<Profile />} \n              />\n              <Route \n                path=\"/sweaters/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}